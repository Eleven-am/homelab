apiVersion: apps/v1
kind: Deployment
metadata:
  name: frames-deployment
  labels:
    app: frames-deployment
  namespace: frames
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  selector:
    matchLabels:
      app: frames-deployment
  template:
    metadata:
      name: frames-deployment
      labels:
        app: frames-deployment
    spec:
      containers:
        - name: frames
          image: elevenam/frames:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: frames-data
              mountPath: /media
          env:
            - name: DATABASE_HOST
              value: postgres-service.postgres.svc.cluster.local
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_NAME
              value: "frames-production"
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: frames-secret
                  key: POSTGRES_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: frames-secret
                  key: POSTGRES_PASSWORD
            - name: DATABASE_URL
              value: "postgres://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: frames-secret
                  key: JWT_SECRET
            - name: REDIS_HOST
              value: redis-service.redis.svc.cluster.local
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_TTL
              value: "86400"
      restartPolicy: Always
      volumes:
        - name: frames-data
          persistentVolumeClaim:
            claimName: frames-data
